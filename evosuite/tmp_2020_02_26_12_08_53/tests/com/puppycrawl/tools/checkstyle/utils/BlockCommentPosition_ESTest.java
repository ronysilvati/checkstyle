/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 26 15:20:10 GMT 2020
 */

package com.puppycrawl.tools.checkstyle.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.puppycrawl.tools.checkstyle.DetailAstImpl;
import com.puppycrawl.tools.checkstyle.api.DetailAST;
import com.puppycrawl.tools.checkstyle.utils.BlockCommentPosition;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BlockCommentPosition_ESTest extends BlockCommentPosition_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.setType(2267);
      detailAstImpl0.addChild(detailAstImpl0);
      BlockCommentPosition.isOnField(detailAstImpl0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      DetailAstImpl detailAstImpl1 = new DetailAstImpl();
      detailAstImpl0.addChild(detailAstImpl1);
      BlockCommentPosition.isOnAnnotationField(detailAstImpl1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      DetailAstImpl detailAstImpl1 = new DetailAstImpl();
      detailAstImpl0.addChild(detailAstImpl1);
      detailAstImpl0.setType(17);
      BlockCommentPosition.isOnAnnotationField(detailAstImpl1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.setType(2267);
      detailAstImpl0.addChild(detailAstImpl0);
      BlockCommentPosition.isOnType(detailAstImpl0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.addChild(detailAstImpl0);
      detailAstImpl0.setType(17);
      BlockCommentPosition.isOnType(detailAstImpl0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.setType(2267);
      detailAstImpl0.addChild(detailAstImpl0);
      BlockCommentPosition.isOnEnumConstant(detailAstImpl0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      DetailAstImpl detailAstImpl1 = new DetailAstImpl();
      detailAstImpl0.addChild(detailAstImpl1);
      BlockCommentPosition.isOnEnumConstant(detailAstImpl1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.addNextSibling(detailAstImpl0);
      detailAstImpl0.setType(155);
      BlockCommentPosition.isOnPackage(detailAstImpl0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      DetailAstImpl detailAstImpl1 = new DetailAstImpl();
      detailAstImpl0.addNextSibling(detailAstImpl1);
      BlockCommentPosition.isOnPackage(detailAstImpl0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        BlockCommentPosition.isOnPackage((DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.BlockCommentPosition", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        BlockCommentPosition.isOnMethod((DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.BlockCommentPosition", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        BlockCommentPosition.isOnMember((DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.BlockCommentPosition", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        BlockCommentPosition.isOnInterface((DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.BlockCommentPosition", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      DetailAstImpl detailAstImpl1 = new DetailAstImpl();
      detailAstImpl0.addChild(detailAstImpl1);
      detailAstImpl0.setType(13);
      // Undeclared exception!
      try { 
        BlockCommentPosition.isOnField(detailAstImpl1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.BlockCommentPosition", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        BlockCommentPosition.isOnEnumConstant((DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.BlockCommentPosition", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        BlockCommentPosition.isOnEnum((DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.BlockCommentPosition", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        BlockCommentPosition.isOnConstructor((DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.BlockCommentPosition", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        BlockCommentPosition.isOnClass((DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.BlockCommentPosition", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        BlockCommentPosition.isOnAnnotationField((DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.BlockCommentPosition", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        BlockCommentPosition.isOnAnnotationDef((DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.BlockCommentPosition", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      BlockCommentPosition.isOnAnnotationField(detailAstImpl0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      BlockCommentPosition.isOnEnumConstant(detailAstImpl0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      BlockCommentPosition.isOnConstructor(detailAstImpl0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      BlockCommentPosition.isOnMethod(detailAstImpl0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      BlockCommentPosition.isOnAnnotationDef(detailAstImpl0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      BlockCommentPosition.isOnEnum(detailAstImpl0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      BlockCommentPosition.isOnInterface(detailAstImpl0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      BlockCommentPosition.isOnClass(detailAstImpl0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.addChild(detailAstImpl0);
      detailAstImpl0.setType(13);
      BlockCommentPosition.isOnField(detailAstImpl0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.addChild(detailAstImpl0);
      detailAstImpl0.setType(17);
      // Undeclared exception!
      BlockCommentPosition.isOnAnnotationField(detailAstImpl0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.setType(59);
      detailAstImpl0.addChild(detailAstImpl0);
      // Undeclared exception!
      BlockCommentPosition.isOnField(detailAstImpl0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.addChild(detailAstImpl0);
      detailAstImpl0.setType(14);
      // Undeclared exception!
      try { 
        BlockCommentPosition.isOnType(detailAstImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.BlockCommentPosition", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.addChild(detailAstImpl0);
      boolean boolean0 = BlockCommentPosition.isOnMember(detailAstImpl0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      boolean boolean0 = BlockCommentPosition.isOnPackage(detailAstImpl0);
      assertFalse(boolean0);
  }
}
