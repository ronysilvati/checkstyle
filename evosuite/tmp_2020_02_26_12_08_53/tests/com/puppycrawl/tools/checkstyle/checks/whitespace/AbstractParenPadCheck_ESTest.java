/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 26 16:37:55 GMT 2020
 */

package com.puppycrawl.tools.checkstyle.checks.whitespace;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.puppycrawl.tools.checkstyle.api.DetailAST;
import com.puppycrawl.tools.checkstyle.api.SeverityLevel;
import com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck;
import com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractParenPadCheck_ESTest extends AbstractParenPadCheck_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TypecastParenPadCheck typecastParenPadCheck0 = new TypecastParenPadCheck();
      assertNull(typecastParenPadCheck0.getId());
      assertEquals(SeverityLevel.ERROR, typecastParenPadCheck0.getSeverityLevel());
      assertFalse(typecastParenPadCheck0.isCommentNodesRequired());
      assertNotNull(typecastParenPadCheck0);
      
      DetailAST detailAST0 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn(1).when(detailAST0).getColumnNo();
      // Undeclared exception!
      try { 
        typecastParenPadCheck0.processRight(detailAST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.api.AbstractCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ParenPadCheck parenPadCheck0 = new ParenPadCheck();
      assertNull(parenPadCheck0.getId());
      assertEquals(SeverityLevel.ERROR, parenPadCheck0.getSeverityLevel());
      assertFalse(parenPadCheck0.isCommentNodesRequired());
      assertNotNull(parenPadCheck0);
      
      // Undeclared exception!
      try { 
        parenPadCheck0.setOption((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DetailAST detailAST0 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      ParenPadCheck parenPadCheck0 = new ParenPadCheck();
      assertNull(parenPadCheck0.getId());
      assertEquals(SeverityLevel.ERROR, parenPadCheck0.getSeverityLevel());
      assertFalse(parenPadCheck0.isCommentNodesRequired());
      assertNotNull(parenPadCheck0);
      
      // Undeclared exception!
      try { 
        parenPadCheck0.processLeft(detailAST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.api.AbstractCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DetailAST detailAST0 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn(1994).when(detailAST0).getColumnNo();
      ParenPadCheck parenPadCheck0 = new ParenPadCheck();
      assertEquals(SeverityLevel.ERROR, parenPadCheck0.getSeverityLevel());
      assertNull(parenPadCheck0.getId());
      assertFalse(parenPadCheck0.isCommentNodesRequired());
      assertNotNull(parenPadCheck0);
      
      // Undeclared exception!
      try { 
        parenPadCheck0.processRight(detailAST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.api.AbstractCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ParenPadCheck parenPadCheck0 = new ParenPadCheck();
      assertEquals(SeverityLevel.ERROR, parenPadCheck0.getSeverityLevel());
      assertNull(parenPadCheck0.getId());
      assertFalse(parenPadCheck0.isCommentNodesRequired());
      assertNotNull(parenPadCheck0);
      
      DetailAST detailAST0 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn((-1251)).when(detailAST0).getColumnNo();
      parenPadCheck0.processRight(detailAST0);
      assertEquals(SeverityLevel.ERROR, parenPadCheck0.getSeverityLevel());
      assertNull(parenPadCheck0.getId());
      assertFalse(parenPadCheck0.isCommentNodesRequired());
  }
}
