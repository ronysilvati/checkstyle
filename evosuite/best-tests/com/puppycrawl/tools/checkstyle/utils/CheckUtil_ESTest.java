/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 26 15:17:11 GMT 2020
 */

package com.puppycrawl.tools.checkstyle.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import antlr.ASTNULLType;
import antlr.BaseAST;
import antlr.CommonAST;
import antlr.ParseTreeToken;
import antlr.Token;
import antlr.collections.AST;
import com.puppycrawl.tools.checkstyle.DetailAstImpl;
import com.puppycrawl.tools.checkstyle.api.DetailAST;
import com.puppycrawl.tools.checkstyle.api.FullIdent;
import com.puppycrawl.tools.checkstyle.utils.CheckUtil;
import java.io.StringWriter;
import java.util.List;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CheckUtil_ESTest extends CheckUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CheckUtil.parseDouble("0bcom.puppycrawl.tools.checkstyle.uLils.ChewkUil", 139);
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.getNextSibling();
      // Undeclared exception!
      try { 
        CheckUtil.isReceiverParameter((DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.CheckUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.setLineNo((-2693));
      detailAstImpl0.setNextSibling((AST) null);
      char[] charArray0 = new char[5];
      charArray0[0] = ']';
      charArray0[2] = 'd';
      charArray0[3] = ']';
      charArray0[4] = 'z';
      DetailAstImpl detailAstImpl1 = new DetailAstImpl();
      CheckUtil.isNonVoidMethod(detailAstImpl1);
      CheckUtil.getTypeParameters(detailAstImpl0);
      CheckUtil.getTypeParameters(detailAstImpl0);
      detailAstImpl1.setText("");
      detailAstImpl1.setLineNo(1748);
      CheckUtil.isBeforeInSource(detailAstImpl1, detailAstImpl0);
      detailAstImpl1.initialize(5, " (");
      CheckUtil.isReceiverParameter(detailAstImpl1);
      CheckUtil.getAccessModifierFromModifiersToken(detailAstImpl1);
      CheckUtil.isBeforeInSource(detailAstImpl1, detailAstImpl0);
      CheckUtil.isElseIf(detailAstImpl0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        CheckUtil.parseDouble("0bcom.puppycrawl.tools.checkstyle.utils.ChewkUtil", 137);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"com.puppycrawl.tools.checkstyle.utils.ChewkUti\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = "com.puppycra_l.tools{checkstyle.utils.CheckUtit";
      int int0 = 141;
      // Undeclared exception!
      try { 
        CheckUtil.parseDouble("com.puppycra_l.tools{checkstyle.utils.CheckUtit", 141);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"com.puppycral.tools{checkstyle.utils.CheckUti\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = "!ob59Ph";
      int int0 = 141;
      // Undeclared exception!
      try { 
        CheckUtil.parseDouble("!ob59Ph", 141);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"!ob59Ph\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = "t[',f3";
      int int0 = 142;
      // Undeclared exception!
      try { 
        CheckUtil.parseDouble("t[',f3", 142);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        CheckUtil.parseDouble("0xcom.puppycrawl.tools{checks)yle.utils.CheckUtiT", 142);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.setText("*ZqYg%Xxd+l`m{ZZUJ");
      CheckUtil.isElseIf(detailAstImpl0);
      DetailAstImpl detailAstImpl1 = (DetailAstImpl)CheckUtil.getFirstNode(detailAstImpl0);
      detailAstImpl1.setFirstChild(detailAstImpl0);
      CheckUtil.createFullType(detailAstImpl0);
      // Undeclared exception!
      try { 
        CheckUtil.getFirstNode(detailAstImpl0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        CheckUtil.parseDouble("^set[A-Z].*", 137);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"^set[A-Z].*\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      String string0 = "*ZqYg%Xxd+l`m{ZZU\\J";
      detailAstImpl0.findAll(detailAstImpl0);
      detailAstImpl0.setText("*ZqYg%Xxd+l`m{ZZUJ");
      CheckUtil.isElseIf(detailAstImpl0);
      ASTNULLType aSTNULLType0 = new ASTNULLType();
      AST aST0 = aSTNULLType0.getNextSibling();
      detailAstImpl0.findAll(aST0);
      CheckUtil.isGetterMethod(detailAstImpl0);
      DetailAstImpl detailAstImpl1 = (DetailAstImpl)CheckUtil.getFirstNode(detailAstImpl0);
      detailAstImpl1.addChild(detailAstImpl0);
      CheckUtil.createFullType(detailAstImpl1);
      CheckUtil.createFullType(detailAstImpl0);
      // Undeclared exception!
      try { 
        CheckUtil.getFirstNode(detailAstImpl0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CheckUtil.parseDouble("PACKAGE", 83);
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      DetailAST detailAST0 = CheckUtil.getFirstNode(detailAstImpl0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "PACKAGE";
      stringArray0[1] = "PACKAGE";
      detailAstImpl0.addNextSibling(detailAST0);
      stringArray0[2] = "PACKAGE";
      stringArray0[3] = "PACKAGE";
      stringArray0[4] = "PACKAGE";
      stringArray0[5] = "";
      detailAstImpl0.initialize(83, "");
      BaseAST.setVerboseStringConversion(true, stringArray0);
      // Undeclared exception!
      try { 
        CheckUtil.isElseIf(detailAstImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.CheckUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.setLineNo((-2693));
      detailAstImpl0.setNextSibling((AST) null);
      char[] charArray0 = new char[5];
      charArray0[0] = ']';
      charArray0[1] = 'y';
      charArray0[2] = 'd';
      charArray0[3] = ']';
      charArray0[4] = 'z';
      DetailAstImpl detailAstImpl1 = new DetailAstImpl();
      CheckUtil.isNonVoidMethod(detailAstImpl1);
      CheckUtil.getTypeParameters(detailAstImpl0);
      CheckUtil.getTypeParameters(detailAstImpl0);
      detailAstImpl1.setLineNo(1479);
      detailAstImpl1.setText("");
      CheckUtil.isBeforeInSource(detailAstImpl1, detailAstImpl0);
      CheckUtil.isReceiverParameter(detailAstImpl1);
      // Undeclared exception!
      try { 
        CheckUtil.getAccessModifierFromModifiersToken(detailAstImpl1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // expected non-null AST-token with type 'MODIFIERS'
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.CheckUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      ASTNULLType aSTNULLType0 = new ASTNULLType();
      detailAstImpl0.findAll(aSTNULLType0);
      detailAstImpl0.setText("*ZqYg%Xxd+l`m{ZZUJ");
      CheckUtil.isElseIf(detailAstImpl0);
      CheckUtil.isGetterMethod(detailAstImpl0);
      DetailAstImpl detailAstImpl1 = (DetailAstImpl)CheckUtil.getFirstNode(detailAstImpl0);
      detailAstImpl1.initialize((-367), "*ZqYg%Xxd+l`m{ZZUJ");
      CheckUtil.isElseIf(detailAstImpl0);
      CheckUtil.isSetterMethod(detailAstImpl1);
      CheckUtil.getFirstNode(detailAstImpl1);
      DetailAstImpl detailAstImpl2 = (DetailAstImpl)CheckUtil.getFirstNode(detailAstImpl1);
      assertSame(detailAstImpl2, detailAstImpl0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.toString();
      int int0 = 90;
      detailAstImpl0.setType(90);
      CheckUtil.isReceiverParameter(detailAstImpl0);
      CheckUtil.isElseIf(detailAstImpl0);
      detailAstImpl0.initialize(49, "[\"");
      CheckUtil.getTypeParameters(detailAstImpl0);
      CheckUtil.getTypeParameters(detailAstImpl0);
      CheckUtil.isElseIf(detailAstImpl0);
      CheckUtil.isSetterMethod(detailAstImpl0);
      CheckUtil.parseDouble("null[-2147483648x-2147483648]", 0);
      CheckUtil.isSetterMethod(detailAstImpl0);
      CheckUtil.isNonVoidMethod(detailAstImpl0);
      detailAstImpl0.getNextSibling();
      // Undeclared exception!
      try { 
        CheckUtil.isReceiverParameter((DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.CheckUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.setNextSibling((AST) null);
      char[] charArray0 = new char[5];
      charArray0[0] = ']';
      charArray0[1] = 'y';
      charArray0[2] = 'd';
      charArray0[4] = '[';
      charArray0[4] = 'r';
      DetailAstImpl detailAstImpl1 = new DetailAstImpl();
      detailAstImpl1.setColumnNo(1966);
      CheckUtil.isNonVoidMethod(detailAstImpl1);
      CheckUtil.getTypeParameters(detailAstImpl0);
      CheckUtil.getTypeParameters(detailAstImpl0);
      CheckUtil.isBeforeInSource(detailAstImpl1, detailAstImpl0);
      CheckUtil.isReceiverParameter(detailAstImpl1);
      CheckUtil.getTypeParameterNames(detailAstImpl0);
      // Undeclared exception!
      try { 
        CheckUtil.getAccessModifierFromModifiersToken(detailAstImpl1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // expected non-null AST-token with type 'MODIFIERS'
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.CheckUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.setColumnNo(46);
      detailAstImpl0.getNextSibling();
      detailAstImpl0.findAll((AST) null);
      detailAstImpl0.setText("*ZqYg%Xxd+l`m{ZZUJ");
      CheckUtil.isElseIf(detailAstImpl0);
      CheckUtil.isGetterMethod(detailAstImpl0);
      DetailAST detailAST0 = CheckUtil.getFirstNode(detailAstImpl0);
      CheckUtil.isElseIf(detailAstImpl0);
      CheckUtil.createFullType(detailAST0);
      CheckUtil.createFullType(detailAstImpl0);
      CheckUtil.getFirstNode(detailAstImpl0);
      // Undeclared exception!
      try { 
        CheckUtil.parseDouble("*ZqYg%Xxd+l`m{ZZUJ", 140);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.getNextSibling();
      detailAstImpl0.findAll((AST) null);
      detailAstImpl0.setText("*ZqYg%Xxd+l`m{ZZUJ");
      CheckUtil.isElseIf(detailAstImpl0);
      boolean boolean0 = CheckUtil.isGetterMethod(detailAstImpl0);
      DetailAST detailAST0 = CheckUtil.getFirstNode(detailAstImpl0);
      boolean boolean1 = CheckUtil.isElseIf(detailAstImpl0);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      CheckUtil.createFullType(detailAST0);
      CheckUtil.createFullType(detailAstImpl0);
      CheckUtil.getFirstNode(detailAstImpl0);
      // Undeclared exception!
      try { 
        CheckUtil.parseDouble("*ZqYg%Xxd+l`m{ZZUJ", 140);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.setNextSibling((AST) null);
      char[] charArray0 = new char[5];
      charArray0[0] = ']';
      charArray0[1] = 'y';
      charArray0[2] = 'd';
      charArray0[3] = '[';
      charArray0[4] = 'r';
      DetailAST detailAST0 = CheckUtil.getFirstNode(detailAstImpl0);
      CheckUtil.isNonVoidMethod(detailAST0);
      CheckUtil.getTypeParameters(detailAstImpl0);
      CheckUtil.isBeforeInSource(detailAST0, detailAstImpl0);
      CheckUtil.isReceiverParameter(detailAST0);
      CheckUtil.getTypeParameterNames(detailAstImpl0);
      String[] stringArray0 = new String[0];
      Set<String> set0 = CheckUtil.parseClassNames(stringArray0);
      assertTrue(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.setNextSibling((AST) null);
      char[] charArray0 = new char[5];
      charArray0[0] = ']';
      charArray0[1] = 'y';
      charArray0[2] = 'd';
      charArray0[3] = '[';
      charArray0[4] = 'r';
      DetailAstImpl detailAstImpl1 = (DetailAstImpl)CheckUtil.getFirstNode(detailAstImpl0);
      CheckUtil.isNonVoidMethod(detailAstImpl1);
      detailAstImpl1.setNextSibling(detailAstImpl0);
      CheckUtil.getTypeParameters(detailAstImpl0);
      CheckUtil.getTypeParameters(detailAstImpl0);
      // Undeclared exception!
      CheckUtil.isBeforeInSource(detailAstImpl1, detailAstImpl0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CheckUtil.parseDouble("[\"", 2520);
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.toString();
      int int0 = 90;
      detailAstImpl0.setType(90);
      detailAstImpl0.getPreviousSibling();
      CheckUtil.isReceiverParameter(detailAstImpl0);
      CheckUtil.isElseIf(detailAstImpl0);
      StringWriter stringWriter0 = new StringWriter(2520);
      stringWriter0.write(90);
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) "null[-2147483648x-2147483648]", (-387), (-387));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.getNextSibling();
      detailAstImpl0.setLineNo(1857);
      detailAstImpl0.findAll((AST) null);
      detailAstImpl0.setText("*ZqYg%Xxd+l`m{ZZUJ");
      CheckUtil.isElseIf(detailAstImpl0);
      boolean boolean0 = CheckUtil.isGetterMethod(detailAstImpl0);
      CheckUtil.getFirstNode(detailAstImpl0);
      boolean boolean1 = CheckUtil.isElseIf(detailAstImpl0);
      assertFalse(boolean1);
      
      double double0 = CheckUtil.parseDouble("*ZqYg%Xxd+l`m{ZZUJ", 1029);
      assertEquals(Double.NaN, double0, 0.01);
      
      boolean boolean2 = CheckUtil.isEqualsMethod(detailAstImpl0);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.setNextSibling((AST) null);
      char[] charArray0 = new char[5];
      charArray0[0] = ']';
      charArray0[1] = 'y';
      charArray0[2] = 'd';
      charArray0[3] = '[';
      charArray0[4] = 'r';
      DetailAstImpl detailAstImpl1 = (DetailAstImpl)CheckUtil.getFirstNode(detailAstImpl0);
      boolean boolean0 = CheckUtil.isNonVoidMethod(detailAstImpl1);
      detailAstImpl1.initialize(601, "9g9; W:b2??(BmV,ut");
      CheckUtil.getTypeParameters(detailAstImpl0);
      CheckUtil.getTypeParameters(detailAstImpl0);
      boolean boolean1 = CheckUtil.isBeforeInSource(detailAstImpl1, detailAstImpl0);
      boolean boolean2 = CheckUtil.isReceiverParameter(detailAstImpl1);
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean0);
      
      CheckUtil.getTypeParameterNames(detailAstImpl0);
      boolean boolean3 = CheckUtil.isSetterMethod(detailAstImpl0);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
      
      CheckUtil.getFirstNode(detailAstImpl0);
      boolean boolean4 = CheckUtil.isGetterMethod(detailAstImpl0);
      assertTrue(boolean4 == boolean0);
      assertFalse(boolean4);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.setNextSibling((AST) null);
      char[] charArray0 = new char[5];
      charArray0[0] = ']';
      charArray0[1] = 'y';
      charArray0[2] = 'd';
      charArray0[3] = '[';
      charArray0[4] = 'r';
      DetailAstImpl detailAstImpl1 = (DetailAstImpl)CheckUtil.getFirstNode(detailAstImpl0);
      CheckUtil.isNonVoidMethod(detailAstImpl1);
      detailAstImpl1.initialize(601, "9g9; W:b2??(BmV,ut");
      CheckUtil.getTypeParameters(detailAstImpl0);
      CheckUtil.getTypeParameters(detailAstImpl0);
      detailAstImpl1.addNextSibling(detailAstImpl0);
      // Undeclared exception!
      CheckUtil.isBeforeInSource(detailAstImpl1, detailAstImpl0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int int0 = 2520;
      CheckUtil.parseDouble("[\"", 2520);
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.toString();
      int int1 = 50;
      detailAstImpl0.setType(50);
      detailAstImpl0.getPreviousSibling();
      CheckUtil.isEqualsMethod(detailAstImpl0);
      // Undeclared exception!
      try { 
        CheckUtil.getAccessModifierFromModifiersToken(detailAstImpl0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // expected non-null AST-token with type 'MODIFIERS'
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.CheckUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "D;3Z>uJ0h$";
      stringArray0[1] = "(T^_}N`XY1&`.&";
      stringArray0[2] = "@02B\"<VoQ^0w";
      stringArray0[3] = " Z@ne=wh6of9";
      stringArray0[4] = "0X";
      stringArray0[5] = ".";
      stringArray0[6] = ":A_z1D";
      stringArray0[7] = "com.puppycrawl.tools.checkstyle.utils.CheckUtil";
      Set<String> set0 = CheckUtil.parseClassNames(stringArray0);
      assertEquals(10, set0.size());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      DetailAstImpl detailAstImpl1 = new DetailAstImpl();
      detailAstImpl0.addPreviousSibling(detailAstImpl1);
      detailAstImpl0.findAll(detailAstImpl1);
      detailAstImpl0.branchContains(1307);
      CheckUtil.isReceiverParameter(detailAstImpl0);
      detailAstImpl0.setText(";RD%=86.}~dJlLt=-}");
      CheckUtil.isBeforeInSource(detailAstImpl0, detailAstImpl1);
      DetailAST detailAST0 = detailAstImpl0.getPreviousSibling();
      CheckUtil.isElseIf(detailAST0);
      CheckUtil.isReceiverParameter(detailAstImpl1);
      FullIdent fullIdent0 = CheckUtil.createFullType(detailAstImpl1);
      assertNotNull(fullIdent0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      int int0 = 0;
      detailAstImpl0.setLineNo(0);
      CheckUtil.isBeforeInSource(detailAstImpl0, detailAstImpl0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = ">";
      stringArray0[2] = "equals";
      detailAstImpl0.initialize(0, "U[\"s<`B@*lAcj2$KKK;");
      CheckUtil.parseClassNames(stringArray0);
      String string0 = "com.puppycrawl.tools.checkstyle.utils.CheckUtil";
      detailAstImpl0.findAllPartial((AST) null);
      CheckUtil.parseDouble("com.puppycrawl.tools.checkstyle.utils.CheckUtil", 0);
      CheckUtil.getFirstNode(detailAstImpl0);
      detailAstImpl0.getPreviousSibling();
      // Undeclared exception!
      try { 
        CheckUtil.isBeforeInSource((DetailAST) null, detailAstImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.CheckUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.findFirstToken(0);
      detailAstImpl0.addNextSibling((DetailAST) null);
      boolean boolean0 = CheckUtil.isBeforeInSource(detailAstImpl0, detailAstImpl0);
      boolean boolean1 = CheckUtil.isNonVoidMethod(detailAstImpl0);
      boolean boolean2 = CheckUtil.isEqualsMethod(detailAstImpl0);
      assertTrue(boolean2 == boolean0);
      
      CheckUtil.isNonVoidMethod(detailAstImpl0);
      boolean boolean3 = CheckUtil.isSetterMethod(detailAstImpl0);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.setNextSibling((AST) null);
      char[] charArray0 = new char[5];
      charArray0[0] = ']';
      charArray0[1] = 'y';
      charArray0[2] = 'd';
      charArray0[3] = '[';
      charArray0[4] = 'r';
      DetailAST detailAST0 = CheckUtil.getFirstNode(detailAstImpl0);
      CheckUtil.isNonVoidMethod(detailAST0);
      CheckUtil.getTypeParameters(detailAstImpl0);
      CheckUtil.getTypeParameters(detailAstImpl0);
      CheckUtil.isBeforeInSource(detailAST0, detailAstImpl0);
      CheckUtil.isReceiverParameter(detailAST0);
      List<String> list0 = CheckUtil.getTypeParameterNames(detailAstImpl0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      DetailAstImpl detailAstImpl1 = new DetailAstImpl();
      DetailAST detailAST0 = CheckUtil.getFirstNode(detailAstImpl1);
      boolean boolean0 = CheckUtil.isNonVoidMethod(detailAST0);
      CheckUtil.getTypeParameterNames(detailAST0);
      boolean boolean1 = CheckUtil.isReceiverParameter(detailAstImpl0);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.getParent();
      CheckUtil.isReceiverParameter(detailAstImpl0);
      // Undeclared exception!
      try { 
        CheckUtil.getTypeParameterNames((DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.CheckUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.getNextSibling();
      detailAstImpl0.addPreviousSibling((DetailAST) null);
      boolean boolean0 = CheckUtil.isEqualsMethod(detailAstImpl0);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "\">\n";
      stringArray0[1] = "\">\n";
      stringArray0[2] = "";
      Set<String> set0 = CheckUtil.parseClassNames(stringArray0);
      assertTrue(set0.contains("\">\n"));
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      int int0 = 0;
      detailAstImpl0.setLineNo(0);
      CheckUtil.isBeforeInSource(detailAstImpl0, detailAstImpl0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = ">";
      stringArray0[2] = "equals";
      detailAstImpl0.initialize(0, "U[\"s<`B@*lAcj2$KKK;");
      CheckUtil.parseClassNames(stringArray0);
      String string0 = "com.puppycrawl.tools.checkstyle.utils.CheckUtil";
      CheckUtil.parseDouble("com.puppycrawl.tools.checkstyle.utils.CheckUtil", 0);
      detailAstImpl0.getPreviousSibling();
      // Undeclared exception!
      try { 
        CheckUtil.isBeforeInSource((DetailAST) null, detailAstImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.CheckUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.addPreviousSibling(detailAstImpl0);
      detailAstImpl0.getFirstChild();
      // Undeclared exception!
      try { 
        CheckUtil.isBeforeInSource((DetailAST) null, detailAstImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.CheckUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String string0 = "";
      int int0 = 812;
      CheckUtil.parseDouble("", 812);
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.getLastChild();
      // Undeclared exception!
      try { 
        CheckUtil.isElseIf((DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.CheckUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      // Undeclared exception!
      try { 
        CheckUtil.parseDouble((String) null, 158);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      DetailAST detailAST0 = CheckUtil.getFirstNode(detailAstImpl0);
      CheckUtil.getTypeParameterNames(detailAST0);
      CheckUtil.createFullType(detailAstImpl0);
      CheckUtil.isReceiverParameter(detailAstImpl0);
      CheckUtil.getTypeParameters(detailAST0);
      // Undeclared exception!
      try { 
        CheckUtil.getAccessModifierFromModifiersToken(detailAST0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // expected non-null AST-token with type 'MODIFIERS'
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.CheckUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DetailAST detailAST0 = null;
      // Undeclared exception!
      try { 
        CheckUtil.isBeforeInSource((DetailAST) null, (DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.CheckUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.getHiddenAfter();
      ParseTreeToken parseTreeToken0 = new ParseTreeToken((Token) null);
      StringWriter stringWriter0 = new StringWriter();
      parseTreeToken0.xmlSerializeRootClose(stringWriter0);
      detailAstImpl0.findAllPartial(parseTreeToken0);
      List<DetailAST> list0 = CheckUtil.getTypeParameters(detailAstImpl0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      CheckUtil.parseClassNames(stringArray0);
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      StringWriter stringWriter0 = null;
      try {
        stringWriter0 = new StringWriter((-738));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String string0 = "";
      CheckUtil.parseDouble("", (-1257));
      // Undeclared exception!
      try { 
        CheckUtil.parseClassNames((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.CheckUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DetailAST detailAST0 = null;
      // Undeclared exception!
      try { 
        CheckUtil.isGetterMethod((DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.CheckUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.setColumnNo(2170);
      detailAstImpl0.getParent();
      // Undeclared exception!
      try { 
        CheckUtil.getTypeParameters((DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.CheckUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      // Undeclared exception!
      try { 
        CheckUtil.getTypeParameters((DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.CheckUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.getPreviousSibling();
      // Undeclared exception!
      try { 
        CheckUtil.isNonVoidMethod((DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.CheckUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DetailAST detailAST0 = null;
      // Undeclared exception!
      try { 
        CheckUtil.isSetterMethod((DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.CheckUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      String string0 = "T+cwUfz!";
      BaseAST.decode("T+cwUfz!");
      detailAstImpl0.getParent();
      // Undeclared exception!
      try { 
        CheckUtil.getAccessModifierFromModifiersToken((DetailAST) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // expected non-null AST-token with type 'MODIFIERS'
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.CheckUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      // Undeclared exception!
      try { 
        CheckUtil.getAccessModifierFromModifiersToken(detailAstImpl0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // expected non-null AST-token with type 'MODIFIERS'
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.CheckUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      double double0 = CheckUtil.parseDouble("%}WpX<K}vW*XY#b9", 64);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "<[J[g9Ej9:57VWO";
      stringArray0[1] = "8#{F{.lp6H=";
      stringArray0[2] = "";
      stringArray0[3] = ";Z3foQLGC0$";
      CheckUtil.parseClassNames(stringArray0);
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.getPreviousSibling();
      // Undeclared exception!
      try { 
        CheckUtil.getFirstNode((DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.CheckUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.getLastChild();
      // Undeclared exception!
      try { 
        CheckUtil.getFirstNode((DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.CheckUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.removeChildren();
      detailAstImpl0.getChildCount();
      detailAstImpl0.setText("");
      detailAstImpl0.getPreviousSibling();
      // Undeclared exception!
      try { 
        CheckUtil.getTypeParameterNames((DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.CheckUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      // Undeclared exception!
      try { 
        CheckUtil.getTypeParameterNames((DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.CheckUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "_vZVTk3'%'^ca#Rr";
      CheckUtil.parseClassNames(stringArray0);
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.getFirstChild();
      // Undeclared exception!
      try { 
        CheckUtil.isGetterMethod((DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.CheckUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.findFirstToken(0);
      detailAstImpl0.addNextSibling((DetailAST) null);
      boolean boolean0 = CheckUtil.isBeforeInSource(detailAstImpl0, detailAstImpl0);
      boolean boolean1 = CheckUtil.isEqualsMethod(detailAstImpl0);
      boolean boolean2 = CheckUtil.isNonVoidMethod(detailAstImpl0);
      assertTrue(boolean2 == boolean0);
      
      boolean boolean3 = CheckUtil.isSetterMethod(detailAstImpl0);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DetailAST detailAST0 = null;
      // Undeclared exception!
      try { 
        CheckUtil.isEqualsMethod((DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.CheckUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.getNextSibling();
      // Undeclared exception!
      try { 
        CheckUtil.createFullType((DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.CheckUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.getPreviousSibling();
      String string0 = "";
      BaseAST.encode("");
      // Undeclared exception!
      try { 
        CheckUtil.isReceiverParameter((DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.CheckUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.getLastChild();
      // Undeclared exception!
      try { 
        CheckUtil.createFullType((DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.CheckUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.getPreviousSibling();
      // Undeclared exception!
      try { 
        CheckUtil.isReceiverParameter((DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.CheckUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      // Undeclared exception!
      try { 
        CheckUtil.parseDouble("com.puppycrawl.tools.checkstyle.utils.CheckUtil", 137);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"com.puppycrawl.tools.checkstyle.utils.CheckUti\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.setNextSibling((AST) null);
      char[] charArray0 = new char[5];
      charArray0[0] = ']';
      charArray0[2] = 'd';
      charArray0[3] = ']';
      charArray0[4] = 'z';
      DetailAstImpl detailAstImpl1 = new DetailAstImpl();
      boolean boolean0 = CheckUtil.isNonVoidMethod(detailAstImpl1);
      CheckUtil.getTypeParameters(detailAstImpl0);
      CheckUtil.getTypeParameters(detailAstImpl0);
      detailAstImpl1.setText("");
      detailAstImpl1.setLineNo(1748);
      CheckUtil.isBeforeInSource(detailAstImpl1, detailAstImpl0);
      detailAstImpl1.initialize(5, " (");
      boolean boolean1 = CheckUtil.isReceiverParameter(detailAstImpl1);
      CheckUtil.getAccessModifierFromModifiersToken(detailAstImpl1);
      boolean boolean2 = CheckUtil.isBeforeInSource(detailAstImpl1, detailAstImpl0);
      assertTrue(boolean2 == boolean0);
      
      boolean boolean3 = CheckUtil.isElseIf(detailAstImpl0);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      String string0 = "com.puppycrawl.tools{checkstyle.utils.CheckUtit";
      int int0 = 141;
      // Undeclared exception!
      try { 
        CheckUtil.parseDouble("com.puppycrawl.tools{checkstyle.utils.CheckUtit", 141);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"com.puppycrawl.tools{checkstyle.utils.CheckUti\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      CheckUtil.parseDouble("PACKAGE", 83);
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "PACKAGE";
      stringArray0[1] = "PACKAGE";
      detailAstImpl0.addNextSibling(detailAstImpl0);
      stringArray0[2] = "PACKAGE";
      stringArray0[3] = "PACKAGE";
      stringArray0[4] = "PACKAGE";
      stringArray0[5] = "";
      detailAstImpl0.initialize(83, "");
      BaseAST.setVerboseStringConversion(true, stringArray0);
      // Undeclared exception!
      try { 
        CheckUtil.isElseIf(detailAstImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.CheckUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.setLineNo((-2693));
      detailAstImpl0.setNextSibling((AST) null);
      char[] charArray0 = new char[5];
      charArray0[0] = ']';
      charArray0[1] = 'y';
      charArray0[2] = 'd';
      charArray0[3] = ']';
      charArray0[4] = 'z';
      DetailAstImpl detailAstImpl1 = new DetailAstImpl();
      CheckUtil.isNonVoidMethod(detailAstImpl1);
      CheckUtil.getTypeParameters(detailAstImpl0);
      CheckUtil.getTypeParameters(detailAstImpl0);
      detailAstImpl1.setText("");
      CheckUtil.isBeforeInSource(detailAstImpl1, detailAstImpl0);
      CheckUtil.isReceiverParameter(detailAstImpl1);
      // Undeclared exception!
      try { 
        CheckUtil.getAccessModifierFromModifiersToken(detailAstImpl1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // expected non-null AST-token with type 'MODIFIERS'
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.CheckUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "0B";
      stringArray0[1] = "?>45;.08FJH1qPJ6L";
      stringArray0[2] = "Lym<(]m";
      String string0 = "`VdJbjO).";
      stringArray0[3] = "`VdJbjO).";
      stringArray0[4] = "";
      String string1 = "@(?wv:jr#<j*Twx8Hi";
      stringArray0[5] = "@(?wv:jr#<j*Twx8Hi";
      stringArray0[6] = "[";
      CheckUtil.parseClassNames(stringArray0);
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      CheckUtil.getTypeParameterNames(detailAstImpl0);
      detailAstImpl0.getPreviousSibling();
      // Undeclared exception!
      try { 
        CheckUtil.getAccessModifierFromModifiersToken((DetailAST) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // expected non-null AST-token with type 'MODIFIERS'
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.CheckUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.findAll(detailAstImpl0);
      detailAstImpl0.setText("*ZqYg%Xxd+l`m{ZZUJ");
      CheckUtil.isElseIf(detailAstImpl0);
      DetailAST detailAST0 = CheckUtil.getFirstNode(detailAstImpl0);
      CheckUtil.createFullType(detailAST0);
      CheckUtil.createFullType(detailAstImpl0);
      CheckUtil.getFirstNode(detailAstImpl0);
      // Undeclared exception!
      try { 
        CheckUtil.parseDouble("*ZqYg%Xxd+l`m{ZZUJ", 140);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      ASTNULLType aSTNULLType0 = new ASTNULLType();
      detailAstImpl0.findAll(aSTNULLType0);
      detailAstImpl0.findAll(aSTNULLType0);
      CheckUtil.isGetterMethod(detailAstImpl0);
      CheckUtil.isElseIf(detailAstImpl0);
      CheckUtil.isSetterMethod(detailAstImpl0);
      DetailAST detailAST0 = CheckUtil.getFirstNode(detailAstImpl0);
      CheckUtil.isEqualsMethod(detailAstImpl0);
      List<String> list0 = CheckUtil.getTypeParameterNames(detailAST0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.setNextSibling((AST) null);
      char[] charArray0 = new char[5];
      charArray0[0] = ']';
      charArray0[1] = 'y';
      charArray0[2] = 'd';
      charArray0[2] = 'W';
      charArray0[0] = 'r';
      CheckUtil.isNonVoidMethod(detailAstImpl0);
      CheckUtil.getTypeParameters(detailAstImpl0);
      CheckUtil.getTypeParameters(detailAstImpl0);
      CheckUtil.isBeforeInSource(detailAstImpl0, detailAstImpl0);
      CheckUtil.getTypeParameterNames(detailAstImpl0);
      // Undeclared exception!
      try { 
        CheckUtil.getAccessModifierFromModifiersToken(detailAstImpl0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // expected non-null AST-token with type 'MODIFIERS'
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.CheckUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      CheckUtil.parseDouble("text=\"", 2476);
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.toString();
      int int0 = 87;
      detailAstImpl0.setType(87);
      detailAstImpl0.getPreviousSibling();
      CheckUtil.isReceiverParameter(detailAstImpl0);
      CheckUtil.isGetterMethod(detailAstImpl0);
      CheckUtil.isElseIf(detailAstImpl0);
      StringWriter stringWriter0 = new StringWriter(2476);
      stringWriter0.write(87);
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) "null[-2147483648x-2147483648]", (-431), (-431));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      DetailAstImpl detailAstImpl1 = new DetailAstImpl();
      detailAstImpl0.findAll(detailAstImpl1);
      detailAstImpl0.initialize(12, ":A_z1D");
      boolean boolean0 = CheckUtil.isSetterMethod(detailAstImpl0);
      detailAstImpl0.toStringTree();
      double double0 = CheckUtil.parseDouble("com.puppycrawl.tools.checkstyle.utils.CheckUtil", 1343);
      assertEquals(Double.NaN, double0, 0.01);
      
      boolean boolean1 = CheckUtil.isNonVoidMethod(detailAstImpl0);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      DetailAstImpl detailAstImpl0 = new DetailAstImpl();
      detailAstImpl0.addNextSibling((DetailAST) null);
      boolean boolean0 = CheckUtil.isBeforeInSource(detailAstImpl0, detailAstImpl0);
      assertFalse(boolean0);
      
      boolean boolean1 = CheckUtil.isEqualsMethod(detailAstImpl0);
      boolean boolean2 = CheckUtil.isNonVoidMethod(detailAstImpl0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
  }
}
