/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 26 15:51:12 GMT 2020
 */

package com.puppycrawl.tools.checkstyle.checks.naming;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.puppycrawl.tools.checkstyle.api.DetailAST;
import com.puppycrawl.tools.checkstyle.api.SeverityLevel;
import com.puppycrawl.tools.checkstyle.checks.naming.AbbreviationAsWordInNameCheck;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbbreviationAsWordInNameCheck_ESTest extends AbbreviationAsWordInNameCheck_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AbbreviationAsWordInNameCheck abbreviationAsWordInNameCheck0 = new AbbreviationAsWordInNameCheck();
      DetailAST detailAST0 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn("Override").when(detailAST0).getText();
      DetailAST detailAST1 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn(detailAST0).when(detailAST1).findFirstToken(anyInt());
      doReturn(detailAST0).when(detailAST1).getFirstChild();
      doReturn(15, 15, 46).when(detailAST1).getType();
      abbreviationAsWordInNameCheck0.visitToken(detailAST1);
      assertEquals(SeverityLevel.ERROR, abbreviationAsWordInNameCheck0.getSeverityLevel());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AbbreviationAsWordInNameCheck abbreviationAsWordInNameCheck0 = new AbbreviationAsWordInNameCheck();
      DetailAST detailAST0 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn("w;qE`Nn%9SwBEqvGC").when(detailAST0).getText();
      DetailAST detailAST1 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn(detailAST0).when(detailAST1).findFirstToken(anyInt());
      doReturn(detailAST0).when(detailAST1).getFirstChild();
      doReturn(4513, 4513, 15).when(detailAST1).getType();
      abbreviationAsWordInNameCheck0.visitToken(detailAST1);
      assertNull(abbreviationAsWordInNameCheck0.getId());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AbbreviationAsWordInNameCheck abbreviationAsWordInNameCheck0 = new AbbreviationAsWordInNameCheck();
      DetailAST detailAST0 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      DetailAST detailAST1 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      DetailAST detailAST2 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn((DetailAST) null).when(detailAST2).getParent();
      DetailAST detailAST3 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn(detailAST0).when(detailAST3).getFirstChild();
      doReturn(detailAST2).when(detailAST3).getParent();
      doReturn(10).when(detailAST3).getType();
      // Undeclared exception!
      try { 
        abbreviationAsWordInNameCheck0.visitToken(detailAST3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.checks.naming.AbbreviationAsWordInNameCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AbbreviationAsWordInNameCheck abbreviationAsWordInNameCheck0 = new AbbreviationAsWordInNameCheck();
      DetailAST detailAST0 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn("whXWnC5;]%]}LrHON)Y").when(detailAST0).getText();
      DetailAST detailAST1 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn(detailAST0).when(detailAST1).findFirstToken(anyInt());
      doReturn(detailAST0).when(detailAST1).getFirstChild();
      doReturn(1, 1, 1487).when(detailAST1).getType();
      abbreviationAsWordInNameCheck0.visitToken(detailAST1);
      assertNull(abbreviationAsWordInNameCheck0.getId());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AbbreviationAsWordInNameCheck abbreviationAsWordInNameCheck0 = new AbbreviationAsWordInNameCheck();
      DetailAST detailAST0 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn((DetailAST) null).when(detailAST0).findFirstToken(anyInt());
      doReturn((DetailAST) null).when(detailAST0).getNextSibling();
      doReturn("K").when(detailAST0).getText();
      doReturn("K").when(detailAST0).toString();
      DetailAST detailAST1 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn(detailAST0).when(detailAST1).findFirstToken(anyInt());
      doReturn(detailAST0).when(detailAST1).getNextSibling();
      doReturn("Nq[N9&?v").when(detailAST1).getText();
      doReturn("abbreviation.as.word").when(detailAST1).toString();
      DetailAST detailAST2 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn(detailAST1).when(detailAST2).findFirstToken(anyInt());
      doReturn(detailAST1).when(detailAST2).getNextSibling();
      doReturn(">Gd\"`b5?!").when(detailAST2).getText();
      doReturn("Bb]Bf&]h#L+-X$sD6").when(detailAST2).toString();
      DetailAST detailAST3 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn(detailAST2).when(detailAST3).findFirstToken(anyInt());
      doReturn(detailAST2).when(detailAST3).getNextSibling();
      doReturn("I?eqN$IlltnL04c").when(detailAST3).getText();
      doReturn("abbreviation.as.word").when(detailAST3).toString();
      DetailAST detailAST4 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn(detailAST3).when(detailAST4).findFirstToken(anyInt());
      doReturn(detailAST3).when(detailAST4).getNextSibling();
      doReturn("abbreviation.as.word").when(detailAST4).getText();
      doReturn("vm").when(detailAST4).toString();
      DetailAST detailAST5 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn(detailAST4).when(detailAST5).findFirstToken(anyInt());
      doReturn(detailAST4).when(detailAST5).getNextSibling();
      doReturn("abbreviation.as.word").when(detailAST5).toString();
      DetailAST detailAST6 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn(detailAST5).when(detailAST6).getFirstChild();
      doReturn("abbreviation.as.word").when(detailAST6).getText();
      DetailAST detailAST7 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn(detailAST6).when(detailAST7).findFirstToken(anyInt());
      doReturn(detailAST6).when(detailAST7).getFirstChild();
      doReturn(2664, 9).when(detailAST7).getType();
      abbreviationAsWordInNameCheck0.visitToken(detailAST7);
      assertEquals(SeverityLevel.ERROR, abbreviationAsWordInNameCheck0.getSeverityLevel());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AbbreviationAsWordInNameCheck abbreviationAsWordInNameCheck0 = new AbbreviationAsWordInNameCheck();
      abbreviationAsWordInNameCheck0.setIgnoreOverriddenMethods(false);
      DetailAST detailAST0 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn("<e").when(detailAST0).getText();
      DetailAST detailAST1 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn(detailAST0).when(detailAST1).findFirstToken(anyInt());
      doReturn(detailAST0).when(detailAST1).getFirstChild();
      doReturn(1239, 9).when(detailAST1).getType();
      abbreviationAsWordInNameCheck0.visitToken(detailAST1);
      assertNull(abbreviationAsWordInNameCheck0.getId());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AbbreviationAsWordInNameCheck abbreviationAsWordInNameCheck0 = new AbbreviationAsWordInNameCheck();
      DetailAST detailAST0 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn((DetailAST) null, (DetailAST) null).when(detailAST0).findFirstToken(anyInt());
      DetailAST detailAST1 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(detailAST1).getType();
      DetailAST detailAST2 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn(detailAST1).when(detailAST2).getParent();
      DetailAST detailAST3 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn((DetailAST) null).when(detailAST3).findFirstToken(anyInt());
      doReturn(detailAST0).when(detailAST3).getFirstChild();
      doReturn(detailAST2).when(detailAST3).getParent();
      doReturn(10).when(detailAST3).getType();
      // Undeclared exception!
      try { 
        abbreviationAsWordInNameCheck0.visitToken(detailAST3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.checks.naming.AbbreviationAsWordInNameCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AbbreviationAsWordInNameCheck abbreviationAsWordInNameCheck0 = new AbbreviationAsWordInNameCheck();
      abbreviationAsWordInNameCheck0.setIgnoreFinal(false);
      abbreviationAsWordInNameCheck0.setIgnoreStatic(false);
      DetailAST detailAST0 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn("abbreviation.as.word").when(detailAST0).getText();
      DetailAST detailAST1 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn(detailAST0).when(detailAST1).findFirstToken(anyInt());
      doReturn(detailAST0).when(detailAST1).getFirstChild();
      doReturn(10).when(detailAST1).getType();
      abbreviationAsWordInNameCheck0.visitToken(detailAST1);
      assertFalse(abbreviationAsWordInNameCheck0.isCommentNodesRequired());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AbbreviationAsWordInNameCheck abbreviationAsWordInNameCheck0 = new AbbreviationAsWordInNameCheck();
      DetailAST detailAST0 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      DetailAST detailAST1 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn(detailAST0).when(detailAST1).findFirstToken(anyInt());
      DetailAST detailAST2 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn(183, 0).when(detailAST2).getType();
      DetailAST detailAST3 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn(detailAST2).when(detailAST3).getParent();
      DetailAST detailAST4 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn(detailAST1).when(detailAST4).getFirstChild();
      doReturn(detailAST3).when(detailAST4).getParent();
      doReturn(10).when(detailAST4).getType();
      abbreviationAsWordInNameCheck0.visitToken(detailAST4);
      assertEquals(SeverityLevel.ERROR, abbreviationAsWordInNameCheck0.getSeverityLevel());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AbbreviationAsWordInNameCheck abbreviationAsWordInNameCheck0 = new AbbreviationAsWordInNameCheck();
      DetailAST detailAST0 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn("Override").when(detailAST0).getText();
      DetailAST detailAST1 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn((DetailAST) null).when(detailAST1).getNextSibling();
      doReturn((String) null).when(detailAST1).toString();
      DetailAST detailAST2 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn(detailAST1).when(detailAST2).getNextSibling();
      doReturn("abbreviation.as.word").when(detailAST2).toString();
      DetailAST detailAST3 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn(detailAST2).when(detailAST3).getNextSibling();
      doReturn("abbreviation.as.word").when(detailAST3).toString();
      DetailAST detailAST4 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn(detailAST0).when(detailAST4).findFirstToken(anyInt());
      doReturn(detailAST3).when(detailAST4).getNextSibling();
      doReturn(")`FBR4LTueBEZvf").when(detailAST4).toString();
      DetailAST detailAST5 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn(detailAST4).when(detailAST5).getFirstChild();
      DetailAST detailAST6 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn(detailAST5).when(detailAST6).getFirstChild();
      doReturn(2664, 9).when(detailAST6).getType();
      abbreviationAsWordInNameCheck0.visitToken(detailAST6);
      assertEquals(SeverityLevel.ERROR, abbreviationAsWordInNameCheck0.getSeverityLevel());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AbbreviationAsWordInNameCheck abbreviationAsWordInNameCheck0 = new AbbreviationAsWordInNameCheck();
      String[] stringArray0 = new String[0];
      abbreviationAsWordInNameCheck0.setAllowedAbbreviations(stringArray0);
      assertEquals(SeverityLevel.ERROR, abbreviationAsWordInNameCheck0.getSeverityLevel());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AbbreviationAsWordInNameCheck abbreviationAsWordInNameCheck0 = new AbbreviationAsWordInNameCheck();
      abbreviationAsWordInNameCheck0.setAllowedAbbreviations((String[]) null);
      assertNull(abbreviationAsWordInNameCheck0.getId());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AbbreviationAsWordInNameCheck abbreviationAsWordInNameCheck0 = new AbbreviationAsWordInNameCheck();
      int[] intArray0 = abbreviationAsWordInNameCheck0.getRequiredTokens();
      assertEquals(0, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AbbreviationAsWordInNameCheck abbreviationAsWordInNameCheck0 = new AbbreviationAsWordInNameCheck();
      int[] intArray0 = abbreviationAsWordInNameCheck0.getDefaultTokens();
      assertArrayEquals(new int[] {14, 15, 154, 157, 161, 21, 10, 9}, intArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AbbreviationAsWordInNameCheck abbreviationAsWordInNameCheck0 = new AbbreviationAsWordInNameCheck();
      abbreviationAsWordInNameCheck0.setAllowedAbbreviationLength(746);
      assertNull(abbreviationAsWordInNameCheck0.getId());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AbbreviationAsWordInNameCheck abbreviationAsWordInNameCheck0 = new AbbreviationAsWordInNameCheck();
      int[] intArray0 = abbreviationAsWordInNameCheck0.getAcceptableTokens();
      assertArrayEquals(new int[] {14, 15, 154, 157, 161, 21, 10, 9, 155}, intArray0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AbbreviationAsWordInNameCheck abbreviationAsWordInNameCheck0 = new AbbreviationAsWordInNameCheck();
      abbreviationAsWordInNameCheck0.setIgnoreFinal(false);
      DetailAST detailAST0 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      DetailAST detailAST1 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn(detailAST0).when(detailAST1).findFirstToken(anyInt());
      DetailAST detailAST2 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn(183, 14).when(detailAST2).getType();
      DetailAST detailAST3 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn(detailAST2).when(detailAST3).getParent();
      DetailAST detailAST4 = mock(DetailAST.class, new ViolatedAssumptionAnswer());
      doReturn(detailAST1).when(detailAST4).getFirstChild();
      doReturn(detailAST3).when(detailAST4).getParent();
      doReturn(10).when(detailAST4).getType();
      abbreviationAsWordInNameCheck0.visitToken(detailAST4);
      assertEquals(SeverityLevel.ERROR, abbreviationAsWordInNameCheck0.getSeverityLevel());
  }
}
